version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "Installing dependencies..."
      - pip install --upgrade pip
      - pip install -r $CODEBUILD_SRC_DIR/requirements.txt
      - pip install pytest pytest-cov  # Install pytest-cov for coverage

      - echo "Verifying Java version..."
      - java -version

      - echo "Downloading SonarScanner 5.0.1..."
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      - unzip sonar-scanner-cli-5.0.1.3006-linux.zip
      - mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
      - /opt/sonar-scanner/bin/sonar-scanner --version

      - echo "Downloading OWASP Dependency-Check..."
      - wget https://github.com/jeremylong/DependencyCheck/releases/download/v12.1.0/dependency-check-12.1.0-release.zip
      - unzip dependency-check-12.1.0-release.zip
      - mv dependency-check /opt/dependency-check
      - /opt/dependency-check/bin/dependency-check.sh --version

  pre_build:
    commands:
      - echo "Verifying Python version..."
      - python --version
      
      - echo "Setting up Django environment..."
      - export DJANGO_SETTINGS_MODULE=restaurent.settings  
      
      - echo "Running pylint..."
      - pylint $CODEBUILD_SRC_DIR/*.py > pylint-report-root.txt || echo "Pylint failed on root"
      - pylint $CODEBUILD_SRC_DIR/restaurent/*.py > pylint-report-restaurant.txt || echo "Pylint failed on restaurant"
      - pylint $CODEBUILD_SRC_DIR/staff/*.py > pylint-staff.txt || echo "Pylint failed on complaints"
      - cat pylint-report-root.txt pylint-report-restaurant.txt pylint-staff.txt > pylint-report.txt
      
      - echo "Running pytest with coverage..."
      - pytest --maxfail=1 --disable-warnings --cov=$CODEBUILD_SRC_DIR --cov-report=xml:coverage.xml > pytest-report.txt || echo "Pytest failed"
      
  build:
    commands:
      - echo "Running SonarCloud scan..."
      - /opt/sonar-scanner/bin/sonar-scanner -Dsonar.login=$SONAR_TOKEN
      - echo "Running OWASP Dependency-Check..."
      - /opt/dependency-check/bin/dependency-check.sh --project "Django Project" --scan "$CODEBUILD_SRC_DIR/" --out ./dependency-check-report --data "$CODEBUILD_SRC_DIR/nvd-cache" --log dependency-check.log --nvdApiKey 9a2f5fda-a545-4181-928d-fdc2aeb36133

      - echo "Build, SonarCloud scan, and Dependency-Check completed"

artifacts:
  files:
    - pylint-report.txt
    - pytest-report.txt
    - dependency-check-report/*
    - coverage.xml

cache:
  paths:
    - '$CODEBUILD_SRC_DIR/nvd-cache/**/*'